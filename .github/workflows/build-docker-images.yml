name: Docker Image Builder

on:
  # schedule:
  #   # Run once a week on Fridays
  #   - cron: "0 0 * * FRI"
  pull_request:
    paths:
      - '.github/workflows/build-docker-images.yml'
      - 'runners/**'
      - 'cryptography-manylinux/**'
  push:
    branches:
      - master
      - manylinux2014_aarch64 # My test branch
    paths:
      - '.github/workflows/build-docker-images.yml'
      - 'runners/**'
      - 'cryptography-manylinux/**'

# Testing building all these containers into my own account.
jobs:
  build_x86:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        IMAGE:
          #- {TAG_NAME: "gwblake/cryptography-runner-centos7", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/centos7"}
          #- {TAG_NAME: "gwblake/cryptography-runner-centos8", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/centos8"}
          #- {TAG_NAME: "gwblake/cryptography-runner-centos8-fips", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/centos8", BUILD_ARGS: "--build-arg FIPS=1"}

          #- {TAG_NAME: "gwblake/cryptography-runner-fedora", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/fedora"}
          #- {TAG_NAME: "gwblake/cryptography-runner-alpine", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/alpine"}

          #- {TAG_NAME: "gwblake/cryptography-runner-stretch", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=stretch"}
          #- {TAG_NAME: "gwblake/cryptography-runner-buster", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=buster"}
          #- {TAG_NAME: "gwblake/cryptography-runner-bullseye", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=bullseye"}
          #- {TAG_NAME: "gwblake/cryptography-runner-sid", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=sid"}

          #- {TAG_NAME: "gwblake/cryptography-runner-ubuntu-bionic", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=bionic"}
          #- {TAG_NAME: "gwblake/cryptography-runner-ubuntu-focal", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=focal"}
          #- {TAG_NAME: "gwblake/cryptography-runner-ubuntu-rolling", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=rolling"}

          #- {TAG_NAME: "gwblake/cryptography-manylinux1", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "cryptography-manylinux", BUILD_ARGS: "-f cryptography-manylinux/Dockerfile-manylinux1"}
          #- {TAG_NAME: "gwblake/cryptography-manylinux2010", ARCH_TAG: "x86_64", DOCKERFILE_PATH: "cryptography-manylinux", BUILD_ARGS: "-f cryptography-manylinux/Dockerfile-manylinux2010"}


    name: "Building docker image ${{ matrix.IMAGE.TAG_NAME }}"
    steps:
      - uses: actions/checkout@master
      # Pull the previous image, but if it fails return true anyway.
      # Sometimes we add new docker images and if they've never been pushed
      # they can't be pulled.
      - name: Pull existing image
        run: docker pull ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }} || true
      - name: Build image
        run: docker build --pull --cache-from ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }} -t ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }} ${{ matrix.IMAGE.DOCKERFILE_PATH }} ${{ matrix.IMAGE.BUILD_ARGS }}
      - name: Login to docker
        run: 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/manylinux2014_aarch64' #&& github.ref == 'refs/heads/master'
      - name: Push image
        run: docker push ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }}
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/manylinux2014_aarch64' #&& github.ref == 'refs/heads/master'

  # There are some containers we simply can't build on Arm right now
  build_aarch64:
    needs: build_x86
    runs-on: ubuntu-latest
    strategy:
      matrix:
        IMAGE:
          #- {TAG_NAME: "gwblake/cryptography-runner-centos7", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/centos7"}
          - {TAG_NAME: "gwblake/cryptography-runner-centos8", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/centos8"}
          #- {TAG_NAME: "gwblake/cryptography-runner-centos8-fips", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/centos8", BUILD_ARGS: "--build-arg FIPS=1"}

          #- {TAG_NAME: "gwblake/cryptography-runner-fedora", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/fedora"}

          #- {TAG_NAME: "gwblake/cryptography-runner-stretch", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=stretch"}
          #- {TAG_NAME: "gwblake/cryptography-runner-buster", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=buster"}
          #- {TAG_NAME: "gwblake/cryptography-runner-bullseye", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=bullseye"}
          #- {TAG_NAME: "gwblake/cryptography-runner-sid", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/debian", BUILD_ARGS: "--build-arg RELEASE=sid"}

          #- {TAG_NAME: "gwblake/cryptography-runner-ubuntu-bionic", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=bionic"}
          #- {TAG_NAME: "gwblake/cryptography-runner-ubuntu-focal", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=focal"}
          #- {TAG_NAME: "gwblake/cryptography-runner-ubuntu-rolling", ARCH_TAG: "arm64", DOCKERFILE_PATH: "runners/ubuntu", BUILD_ARGS: "--build-arg RELEASE=rolling"}

          #- {TAG_NAME: "gwblake/cryptography-manylinux2014_aarch64", ARCH_TAG: "arm64", DOCKERFILE_PATH: "cryptography-manylinux", BUILD_ARGS: "-f cryptography-manylinux/Dockerfile-manylinux2014_aarch64"}


    name: "Building docker image ${{ matrix.IMAGE.TAG_NAME }}"
    steps:
      - uses: actions/checkout@master
      - name: Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3.3.0
        with:
          buildx-version: latest
          qemu-version: latest
      # Pull the previous image, but if it fails return true anyway.
      # Sometimes we add new docker images and if they've never been pushed
      # they can't be pulled.
      - name: Pull existing image
        run: docker pull ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }} || true
      - name: Build image
        run: >
          docker buildx build --platform linux/arm64 --pull --cache-from ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }}
          --cache-to "type=local,dest=/tmp/.buildx-cache" --output "type=image,push=false"
          -t ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }} ${{ matrix.IMAGE.DOCKERFILE_PATH }} ${{ matrix.IMAGE.BUILD_ARGS }}
      - name: Login to docker
        run: 'docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/manylinux2014_aarch64' #&& github.ref == 'refs/heads/master'
      - name: Show images
        run: docker images
      - name: Push image
        run: >
          docker buildx build --cache-from "type=local,src=/tmp/.buildx-cache"
          --platform linux/arm64,linux/amd64 --output "type=image,push=true" -t ${{ matrix.IMAGE.TAG_NAME }}:${{ matrix.IMAGE.ARCH_TAG }}
          ${{ matrix.IMAGE.DOCKERFILE_PATH }} ${{ matrix.IMAGE.BUILD_ARGS }}
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/manylinux2014_aarch64' #&& github.ref == 'refs/heads/master'
      - name: Enable experimental docker features
        run: 'echo "{\"experimental\": true}" | sudo tee -a /etc/docker/daemon.json'
      - name: Create a manifest
        run: docker manifest create ${{ matrix.IMAGE.TAG_NAME }}:latest --amend ${{ matrix.IMAGE.TAG_NAME }}:x86_64 --amend ${{ matrix.IMAGE.TAG_NAME }}:arm64
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/manylinux2014_aarch64' #&& github.ref == 'refs/heads/master'
      - name: Push multi-arch manifest
        run: docker manifest push ${{ matrix.IMAGE.TAG_NAME }}:latest
        if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/manylinux2014_aarch64' #&& github.ref == 'refs/heads/master'
